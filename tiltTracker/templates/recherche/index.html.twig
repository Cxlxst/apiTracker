{% extends 'base.html.twig' %}

{% block title %}TILT · Recherche{% endblock %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/stylech.css') }}">
    <script>
    var BASE_URL = '{{ asset('') }}';
    </script>

{% endblock %}
{% block body %}
<style>
    .example-wrapper { max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
    table { border-collapse: collapse; width: 100%; margin-top: 20px; }
    th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
</style>

<input type="text" id="identifiantUser" value="{{ app.session.get('idConnexion') }}">

<div class="split-container">
    
    <div class="left-container-classic">
    <div class="nav-bar">
            <div class="nav-bar-account">
                <p id="titreCompteVisibilite">Compte</p>
                <a id="profilVisibilite" href="{{ path("app_profil") }}">
                    <button class="native"><img src="../build/images/user.png">Profil</button>
                </a>
                <a id="matchVisibilite" href="{{ path("app_match") }}">
                    <button class="native"><img src="../build/images/match.png">Matchs</button>
                </a> 
                <button class="selected"><img src="../build/images/search.png">Recherche</button>
            </div>
            <div class="nav-bar-parameters">
                <p id="titreParametreVisibilite">Paramètres</p>
                <a id="informationVisibilite" href="{{ path("app_infos") }}">
                    <button class="native"><img src="../build/images/infos.png">Informations</button>
                </a>
                <a id="visibiliteVisibilite" href="{{ path("app_visibilite") }}">
                    <button class="native"><img src="../build/images/visibility.png">Visibilité</button>
                </a>
            </div>
            <div class="nav-bar-log-out">
                <button id="bouttonConnexionDeconnexion" class="native"><img src="../build/images/log_out.png">Déconnexion</button>
            </div>
        </div>

    </div>

    <div class="right-container-inf">
        <div class="containerfix">
            <div class="search-container">
                <input type="text" id="inputRecherche" class="search-bar" placeholder="Rechercher un joueur" />
            </div>
            <div class="example-wrapper">
                <h2>Liste de nos joueurs</h2>
                <div id="divListeJoueur"></div>
                <script src="{{ asset('js/appelApi.js') }}" data-api-option="getListe"></script>
            </div>
        </div>
    </div>


    
    <script type="text/javascript">


    //Vérification du statut de connexion pour l'affichage des données compte
    


        //Cette requête est appelé au moment ou la liste des utilisateurs est récupérer par l'appel api, elle affiche ensuite un tableau
    function miseEnPlaceListeJoueur(data) {
        // Check if the data array is not empty and has the properties we expect
        if (!data || !data.length || !('pseudo' in data[0]) || !('statut' in data[0])) {
            console.error('Les champs sont vides');
            return;
        }

        // Use a document fragment to improve performance when appending children
        var fragment = document.createDocumentFragment();

        data.forEach(function(item) {
            // Create a container div for each player that mimics a table row
            var playerRow = document.createElement('div');
            playerRow.className = 'player-row';

            // Create a div for the player's pseudo
            var pseudoDiv = document.createElement('div');
            pseudoDiv.className = 'player-data';
            pseudoDiv.textContent = item.pseudo;
            playerRow.appendChild(pseudoDiv);

            // Create the divider
            var divider = document.createElement('div');
            divider.className = 'player-divider';
            playerRow.appendChild(divider);

            // Create a container for the player's status and image
            var statusContainer = document.createElement('div');
            statusContainer.className = 'player-status-container';

            // Create an img element for the status icon
            var statusImg = document.createElement('img');
            statusImg.className = 'status-image';
            statusImg.src = BASE_URL + (item.statut === 'Profil privé' ? 'build/images/Eyepub.png' : 'build/images/Eyepriv.png'); // Replace with actual paths
            statusContainer.appendChild(statusImg);

            // Create a div for the player's status text
            var statusDiv = document.createElement('div');
            statusDiv.className = 'player-data';
            statusDiv.textContent = item.statut;
            statusContainer.appendChild(statusDiv);

            // Add the status container to the player row
            playerRow.appendChild(statusContainer);

            if (item.statut == 'public') {
                var button = document.createElement('button');
                button.textContent = 'Voir le profil';
                button.className = 'view-profile-button';
                button.addEventListener('click', function() {
                    window.location.href = '{{ path("app_users") }}?id=' + item.id;
                });
                playerRow.appendChild(button);
            }

            // Append the player row to the document fragment
            fragment.appendChild(playerRow);
        });

        // Select the div where the player rows should be displayed
        var divListeJoueur = document.getElementById('divListeJoueur');
        divListeJoueur.innerHTML = ''; // Clear any existing content
        divListeJoueur.appendChild(fragment); // Append the document fragment to the DOM
    }








    //Requête de recherche avec bouton
    {# document.getElementById('executeApiButton').addEventListener('click', function () {
        var recherche = document.getElementById('recherche').value;

        rechercheUser(recherche);
    }); #}


    //Requête de recherche automatisé
    var rechercheTimeout;

    document.getElementById('inputRecherche').addEventListener('input', function () {
        
        clearTimeout(rechercheTimeout);

        rechercheTimeout = setTimeout(function () {

            var recherche = document.getElementById('inputRecherche').value;
            rechercheUser(recherche);

        }, 800);

    });



    function rechercheUser(recherche){
        const script = document.createElement('script');
        script.src = "{{ asset('js/appelApi.js') }}";
        script.setAttribute('data-api-option', 'rechercheUser,'+ recherche);

        document.body.appendChild(script);

        script.onload = function () {
            document.body.removeChild(script);
        };
    }


    //Gère le statut de connexion du user
    function resultatRechercheGenerale(data) {

        console.log(data)

        if(apiData['hydra:totalItems'] !=0)
        {
            miseEnPlaceListeJoueur(apiData['hydra:member'])
            console.log("Utilisateur trouvé")
            //console.log(apiData['hydra:member'])
        }
        else
        {
            console.log("Aucun utilisateur trouvé")
        }
    }



    var identifiantUserValue = document.getElementById('identifiantUser').value;
    var buttonConnexionDeconnexion = document.getElementById('bouttonConnexionDeconnexion');

    if(identifiantUserValue != 0)
    {
        buttonConnexionDeconnexion.innerHTML = 'Deconnexion';

        buttonConnexionDeconnexion.addEventListener('click', function () { 
            window.location.href = '{{ path("app_deconnexionUser") }}';
        });
    }
    else
    {
        buttonConnexionDeconnexion.innerHTML = 'Connexion';


        buttonConnexionDeconnexion.addEventListener('click', function () { 
            window.location.href = '{{ path("app_connexion") }}';
        });
        

        var etatTitreCompteVisibilite = document.getElementById('titreCompteVisibilite');
        var etatProfilVisibilite = document.getElementById('profilVisibilite');
        var etatMatchVisibilite = document.getElementById('matchVisibilite');
        var titreParametreVisibilite = document.getElementById('titreParametreVisibilite');
        var informationVisibilite = document.getElementById('informationVisibilite');
        var visibiliteVisibilite = document.getElementById('visibiliteVisibilite');

        etatTitreCompteVisibilite.style.display = 'none';
        etatProfilVisibilite.style.display = 'none';
        etatMatchVisibilite.style.display = 'none';
        titreParametreVisibilite.style.display = 'none';
        informationVisibilite.style.display = 'none';
        visibiliteVisibilite.style.display = 'none';
    }
    
  



    </script>



{% endblock %}